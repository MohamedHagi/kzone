{"ast":null,"code":"import LoadingImage from \"./blots/image.js\";\nimport \"./quill.imageUploader.css\";\n\nclass ImageUploader {\n  constructor(quill, options) {\n    this.quill = quill;\n    this.options = options;\n    this.range = null;\n    if (typeof this.options.upload !== \"function\") console.warn(\"[Missing config] upload function that returns a promise is required\");\n    var toolbar = this.quill.getModule(\"toolbar\");\n    toolbar.addHandler(\"image\", this.selectLocalImage.bind(this));\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handlePaste = this.handlePaste.bind(this);\n    this.quill.root.addEventListener(\"drop\", this.handleDrop, false);\n    this.quill.root.addEventListener(\"paste\", this.handlePaste, false);\n  }\n\n  selectLocalImage() {\n    this.range = this.quill.getSelection();\n    this.fileHolder = document.createElement(\"input\");\n    this.fileHolder.setAttribute(\"type\", \"file\");\n    this.fileHolder.setAttribute(\"accept\", \"image/*\");\n    this.fileHolder.setAttribute(\"style\", \"visibility:hidden\");\n    this.fileHolder.onchange = this.fileChanged.bind(this);\n    document.body.appendChild(this.fileHolder);\n    this.fileHolder.click();\n    window.requestAnimationFrame(() => {\n      document.body.removeChild(this.fileHolder);\n    });\n  }\n\n  handleDrop(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    if (evt.dataTransfer && evt.dataTransfer.files && evt.dataTransfer.files.length) {\n      if (document.caretRangeFromPoint) {\n        const selection = document.getSelection();\n        const range = document.caretRangeFromPoint(evt.clientX, evt.clientY);\n\n        if (selection && range) {\n          selection.setBaseAndExtent(range.startContainer, range.startOffset, range.startContainer, range.startOffset);\n        }\n      } else {\n        const selection = document.getSelection();\n        const range = document.caretPositionFromPoint(evt.clientX, evt.clientY);\n\n        if (selection && range) {\n          selection.setBaseAndExtent(range.offsetNode, range.offset, range.offsetNode, range.offset);\n        }\n      }\n\n      this.range = this.quill.getSelection();\n      let file = evt.dataTransfer.files[0];\n      setTimeout(() => {\n        this.range = this.quill.getSelection();\n        this.readAndUploadFile(file);\n      }, 0);\n    }\n  }\n\n  handlePaste(evt) {\n    let clipboard = evt.clipboardData || window.clipboardData; // IE 11 is .files other browsers are .items\n\n    if (clipboard && (clipboard.items || clipboard.files)) {\n      let items = clipboard.items || clipboard.files;\n      const IMAGE_MIME_REGEX = /^image\\/(jpe?g|gif|png|svg|webp)$/i;\n\n      for (let i = 0; i < items.length; i++) {\n        if (IMAGE_MIME_REGEX.test(items[i].type)) {\n          let file = items[i].getAsFile ? items[i].getAsFile() : items[i];\n\n          if (file) {\n            this.range = this.quill.getSelection();\n            evt.preventDefault();\n            setTimeout(() => {\n              this.range = this.quill.getSelection();\n              this.readAndUploadFile(file);\n            }, 0);\n          }\n        }\n      }\n    }\n  }\n\n  readAndUploadFile(file) {\n    let isUploadReject = false;\n    const fileReader = new FileReader();\n    fileReader.addEventListener(\"load\", () => {\n      if (!isUploadReject) {\n        let base64ImageSrc = fileReader.result;\n        this.insertBase64Image(base64ImageSrc);\n      }\n    }, false);\n\n    if (file) {\n      fileReader.readAsDataURL(file);\n    }\n\n    this.options.upload(file).then(imageUrl => {\n      this.insertToEditor(imageUrl);\n    }, error => {\n      isUploadReject = true;\n      this.removeBase64Image();\n      console.warn(error);\n    });\n  }\n\n  fileChanged() {\n    const file = this.fileHolder.files[0];\n    this.readAndUploadFile(file);\n  }\n\n  insertBase64Image(url) {\n    const range = this.range;\n    this.quill.insertEmbed(range.index, LoadingImage.blotName, `${url}`, \"user\");\n  }\n\n  insertToEditor(url) {\n    const range = this.range; // Delete the placeholder image\n\n    this.quill.deleteText(range.index, 3, \"user\"); // Insert the server saved image\n\n    this.quill.insertEmbed(range.index, \"image\", `${url}`, \"user\");\n    range.index++;\n    this.quill.setSelection(range, \"user\");\n  }\n\n  removeBase64Image() {\n    const range = this.range;\n    this.quill.deleteText(range.index, 3, \"user\");\n  }\n\n}\n\nwindow.ImageUploader = ImageUploader;\nexport default ImageUploader;","map":{"version":3,"sources":["/Users/KOBZ/Downloads/kzonetest/kzone/node_modules/quill-image-uploader/src/quill.imageUploader.js"],"names":["LoadingImage","ImageUploader","constructor","quill","options","range","upload","console","warn","toolbar","getModule","addHandler","selectLocalImage","bind","handleDrop","handlePaste","root","addEventListener","getSelection","fileHolder","document","createElement","setAttribute","onchange","fileChanged","body","appendChild","click","window","requestAnimationFrame","removeChild","evt","stopPropagation","preventDefault","dataTransfer","files","length","caretRangeFromPoint","selection","clientX","clientY","setBaseAndExtent","startContainer","startOffset","caretPositionFromPoint","offsetNode","offset","file","setTimeout","readAndUploadFile","clipboard","clipboardData","items","IMAGE_MIME_REGEX","i","test","type","getAsFile","isUploadReject","fileReader","FileReader","base64ImageSrc","result","insertBase64Image","readAsDataURL","then","imageUrl","insertToEditor","error","removeBase64Image","url","insertEmbed","index","blotName","deleteText","setSelection"],"mappings":"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","sourcesContent":["import LoadingImage from \"./blots/image.js\";\r\n\r\nimport \"./quill.imageUploader.css\";\r\n\r\nclass ImageUploader {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.range = null;\r\n\r\n        if (typeof this.options.upload !== \"function\")\r\n            console.warn(\r\n                \"[Missing config] upload function that returns a promise is required\"\r\n            );\r\n\r\n        var toolbar = this.quill.getModule(\"toolbar\");\r\n        toolbar.addHandler(\"image\", this.selectLocalImage.bind(this));\r\n\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.handlePaste = this.handlePaste.bind(this);\r\n\r\n        this.quill.root.addEventListener(\"drop\", this.handleDrop, false);\r\n        this.quill.root.addEventListener(\"paste\", this.handlePaste, false);\r\n    }\r\n\r\n    selectLocalImage() {\r\n        this.range = this.quill.getSelection();\r\n        this.fileHolder = document.createElement(\"input\");\r\n        this.fileHolder.setAttribute(\"type\", \"file\");\r\n        this.fileHolder.setAttribute(\"accept\", \"image/*\");\r\n        this.fileHolder.setAttribute(\"style\", \"visibility:hidden\");\r\n\r\n        this.fileHolder.onchange = this.fileChanged.bind(this);\r\n\r\n        document.body.appendChild(this.fileHolder);\r\n\r\n        this.fileHolder.click();\r\n\r\n        window.requestAnimationFrame(() => {\r\n            document.body.removeChild(this.fileHolder);\r\n        });\r\n    }\r\n\r\n    handleDrop(evt) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        if (\r\n            evt.dataTransfer &&\r\n            evt.dataTransfer.files &&\r\n            evt.dataTransfer.files.length\r\n        ) {\r\n            if (document.caretRangeFromPoint) {\r\n                const selection = document.getSelection();\r\n                const range = document.caretRangeFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.startContainer,\r\n                        range.startOffset,\r\n                        range.startContainer,\r\n                        range.startOffset\r\n                    );\r\n                }\r\n            } else {\r\n                const selection = document.getSelection();\r\n                const range = document.caretPositionFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.offsetNode,\r\n                        range.offset,\r\n                        range.offsetNode,\r\n                        range.offset\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.range = this.quill.getSelection();\r\n            let file = evt.dataTransfer.files[0];\r\n\r\n            setTimeout(() => {\r\n                this.range = this.quill.getSelection();\r\n                this.readAndUploadFile(file);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handlePaste(evt) {\r\n        let clipboard = evt.clipboardData || window.clipboardData;\r\n\r\n        // IE 11 is .files other browsers are .items\r\n        if (clipboard && (clipboard.items || clipboard.files)) {\r\n            let items = clipboard.items || clipboard.files;\r\n            const IMAGE_MIME_REGEX = /^image\\/(jpe?g|gif|png|svg|webp)$/i;\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (IMAGE_MIME_REGEX.test(items[i].type)) {\r\n                    let file = items[i].getAsFile ? items[i].getAsFile() : items[i];\r\n\r\n                    if (file) {\r\n                        this.range = this.quill.getSelection();\r\n                        evt.preventDefault();\r\n                        setTimeout(() => {\r\n                            this.range = this.quill.getSelection();\r\n                            this.readAndUploadFile(file);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readAndUploadFile(file) {\r\n        let isUploadReject = false;\r\n\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.addEventListener(\r\n            \"load\",\r\n            () => {\r\n                if (!isUploadReject) {\r\n                    let base64ImageSrc = fileReader.result;\r\n                    this.insertBase64Image(base64ImageSrc);\r\n                }\r\n            },\r\n            false\r\n        );\r\n\r\n        if (file) {\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n\r\n        this.options.upload(file).then(\r\n            (imageUrl) => {\r\n                this.insertToEditor(imageUrl);\r\n            },\r\n            (error) => {\r\n                isUploadReject = true;\r\n                this.removeBase64Image();\r\n                console.warn(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    fileChanged() {\r\n        const file = this.fileHolder.files[0];\r\n        this.readAndUploadFile(file);\r\n    }\r\n\r\n    insertBase64Image(url) {\r\n        const range = this.range;\r\n        this.quill.insertEmbed(\r\n            range.index,\r\n            LoadingImage.blotName,\r\n            `${url}`,\r\n            \"user\"\r\n        );\r\n    }\r\n\r\n    insertToEditor(url) {\r\n        const range = this.range;\r\n        // Delete the placeholder image\r\n        this.quill.deleteText(range.index, 3, \"user\");\r\n        // Insert the server saved image\r\n        this.quill.insertEmbed(range.index, \"image\", `${url}`, \"user\");\r\n\r\n        range.index++;\r\n        this.quill.setSelection(range, \"user\");\r\n    }\r\n\r\n    removeBase64Image() {\r\n        const range = this.range;\r\n        this.quill.deleteText(range.index, 3, \"user\");\r\n    }\r\n}\r\n\r\nwindow.ImageUploader = ImageUploader;\r\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}