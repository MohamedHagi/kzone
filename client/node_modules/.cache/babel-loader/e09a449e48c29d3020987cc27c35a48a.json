{"ast":null,"code":"import { Quill } from \"react-quill\"; // #1 import quill-image-uploader\n\nimport ImageUploader from \"quill-image-uploader\";\nimport ImageResize from 'quill-image-resize-module-react'; // #2 register module\n\nQuill.register(\"modules/imageUploader\", ImageUploader);\nQuill.register('modules/imageResize', ImageResize);\nexport const modules = {\n  toolbar: [[{\n    'header': '1'\n  }, {\n    'header': '2'\n  }, {\n    'font': []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], [{\n    align: ''\n  }, {\n    align: 'center'\n  }, {\n    align: 'right'\n  }, {\n    align: 'justify'\n  }], ['link', 'image', 'video'], ['clean']],\n  imageUploader: {\n    upload: file => {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        formData.append(\"image\", file);\n        fetch(\"https://api.imgbb.com/1/upload?key=d36eb6591370ae7f9089d85875e56b22\", {\n          method: \"POST\",\n          body: formData\n        }).then(response => response.json()).then(result => {\n          console.log(result);\n          resolve(result.data.url);\n        }).catch(error => {\n          reject(\"Upload failed\");\n          console.error(\"Error:\", error);\n        });\n      });\n    }\n  },\n  imageResize: {\n    parchment: Quill.import('parchment'),\n    modules: ['Resize', 'DisplaySize', 'Toolbar']\n  }\n};\nexport const formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"imageBlot\", \"align\"];","map":{"version":3,"sources":["/Users/KOBZ/Downloads/kzonetest/kzone/src/components/CreatePost/Form/Editor.js"],"names":["Quill","ImageUploader","ImageResize","register","modules","toolbar","size","align","imageUploader","upload","file","Promise","resolve","reject","formData","FormData","append","fetch","method","body","then","response","json","result","console","log","data","url","catch","error","imageResize","parchment","import","formats"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CAKA;;AAEAF,KAAK,CAACG,QAAN,CAAe,uBAAf,EAAwCF,aAAxC;AACAD,KAAK,CAACG,QAAN,CAAe,qBAAf,EAAsCD,WAAtC;AAGE,OAAO,MAAME,OAAO,GAAG;AAErBC,EAAAA,OAAO,EAAE,CACX,CAAC;AAAE,cAAU;AAAZ,GAAD,EAAoB;AAAE,cAAU;AAAZ,GAApB,EAAuC;AAAE,YAAQ;AAAV,GAAvC,CADW,EAEX,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFW,EAGX,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHW,EAIX,CAAC;AAAE,YAAQ;AAAV,GAAD,EAAwB;AAAE,YAAQ;AAAV,GAAxB,EACA;AAAE,cAAU;AAAZ,GADA,EACoB;AAAE,cAAU;AAAZ,GADpB,CAJW,EAMX,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAgB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAhB,EAAqC;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAArC,EAAyD;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAzD,CANW,EAOX,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAPW,EAQX,CAAC,OAAD,CARW,CAFY;AAYrBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAEC,IAAI,IAAI;AACd,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,IAAzB;AAEAO,QAAAA,KAAK,CACH,qEADG,EAEH;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,IAAI,EAAEL;AAFR,SAFG,CAAL,CAOGM,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,MAAM,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAX,UAAAA,OAAO,CAACW,MAAM,CAACG,IAAP,CAAYC,GAAb,CAAP;AACD,SAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdhB,UAAAA,MAAM,CAAC,eAAD,CAAN;AACAW,UAAAA,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,SAfH;AAgBD,OApBM,CAAP;AAqBD;AAvBY,GAZM;AAsCrBC,EAAAA,WAAW,EAAE;AACZC,IAAAA,SAAS,EAAE/B,KAAK,CAACgC,MAAN,CAAa,WAAb,CADC;AAEZ5B,IAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,SAA1B;AAFG;AAtCQ,CAAhB;AAiDT,OAAO,MAAM6B,OAAO,GAAG,CACnB,QADmB,EAEnB,MAFmB,EAGnB,MAHmB,EAInB,MAJmB,EAKnB,QALmB,EAMnB,WANmB,EAOnB,QAPmB,EAQnB,YARmB,EASnB,MATmB,EAUnB,QAVmB,EAWnB,QAXmB,EAYnB,MAZmB,EAanB,OAbmB,EAcnB,OAdmB,EAenB,WAfmB,EAgBnB,OAhBmB,CAAhB","sourcesContent":["import { Quill } from \"react-quill\";\n\n// #1 import quill-image-uploader\nimport ImageUploader from \"quill-image-uploader\";\nimport ImageResize from 'quill-image-resize-module-react';\n\n\n\n\n// #2 register module\n\nQuill.register(\"modules/imageUploader\", ImageUploader);\nQuill.register('modules/imageResize', ImageResize);\n\n\n  export const modules = {\n \n    toolbar: [\n  [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n  [{ size: [] }],\n  ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n  [{ 'list': 'ordered' }, { 'list': 'bullet' },\n  { 'indent': '-1' }, { 'indent': '+1' }],\n  [{ align: '' }, { align: 'center' }, { align: 'right' }, { align: 'justify' }],\n  ['link', 'image', 'video'],\n  ['clean']],\n    \n    imageUploader: {\n      upload: file => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          formData.append(\"image\", file);\n\n          fetch(\n            \"https://api.imgbb.com/1/upload?key=d36eb6591370ae7f9089d85875e56b22\",\n            {\n              method: \"POST\",\n              body: formData\n            }\n          )\n            .then(response => response.json())\n            .then(result => {\n              console.log(result);\n              resolve(result.data.url);\n            })\n            .catch(error => {\n              reject(\"Upload failed\");\n              console.error(\"Error:\", error);\n            });\n        });\n      }\n    },\n\n    imageResize: {\n     parchment: Quill.import('parchment'),\n     modules: ['Resize', 'DisplaySize', 'Toolbar']\n  },\n\n  \n \n\n\n  };\n\nexport const formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"video\",\n    \"imageBlot\",\n    \"align\"\n  ];\n\n  \n\n\n"]},"metadata":{},"sourceType":"module"}