{"ast":null,"code":"import { FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = () => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/KOBZ/Downloads/kzonetest/kzone-test/src/actions/posts.js"],"names":["FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","START_LOADING","END_LOADING","api","getPost","id","dispatch","type","data","fetchPost","payload","post","error","console","log","getPosts","fetchPosts","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","updatePost","likePost","deletePost"],"mappings":"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","sourcesContent":["import { FETCH_POST, FETCH_ALL,FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING} from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING});\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n      dispatch({ type: END_LOADING});\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n      dispatch({ type: START_LOADING});\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n  dispatch({ type: END_LOADING});\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING});\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n      dispatch({ type: END_LOADING});\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}