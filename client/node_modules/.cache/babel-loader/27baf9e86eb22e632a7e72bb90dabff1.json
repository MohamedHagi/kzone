{"ast":null,"code":"var _jsxFileName = \"/Users/KOBZ/Downloads/kzonetest/kzone-test/src/components/LoginPage/LoginPage.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container, CircularProgress } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport { AUTH } from '../../constants/actionTypes';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth.js';\n/**\n* @author\n* @function LoginPage\n**/\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst LoginPage = props => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleIsLoading = () => setIsLoading(prevIsLoading => !prevIsLoading);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      props.signup(form, history);\n    } else {\n      props.signin(form, history);\n      handleIsLoading();\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    props.googleSignIn(result, token);\n\n    try {\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  console.log(props);\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      marginTop: \"100px\",\n      marginBottom: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), isLoading ? /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"914101413857-9rvg8gs7e6j72qajgm05r5o1qljqqut7.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 155\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleError,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state\n  };\n};\n\nconst mapStateToDispatch = dispatch => {\n  return {\n    signin: (form, history) => dispatch(signin(form, history)),\n    signup: (form, history) => dispatch(signup(form, history)),\n    googleSignIn: (result, token) => dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapStateToDispatch)(LoginPage);","map":{"version":3,"sources":["/Users/KOBZ/Downloads/kzonetest/kzone-test/src/components/LoginPage/LoginPage.js"],"names":["React","useState","connect","Avatar","Button","Paper","Grid","Typography","Container","CircularProgress","useHistory","useStyles","LockOutlinedIcon","Input","GoogleLogin","AUTH","Icon","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","LoginPage","props","form","setForm","isSignup","setIsSignup","isLoading","setIsLoading","history","classes","showPassword","setShowPassword","handleShowPassword","prevShowPassword","handleIsLoading","prevIsLoading","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","googleSignIn","push","error","console","log","googleError","handleChange","target","name","value","position","marginTop","marginBottom","paper","avatar","submit","renderProps","googleButton","onClick","disabled","mapStateToProps","state","post","mapStateToDispatch","dispatch","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,SAAlD,EAA6DC,gBAA7D,QAAqF,mBAArF;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,IAAT,QAAqB,6BAArB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,uBAA/B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,QAAQ,EAAE,EAA3B;AAA+BC,EAAAA,KAAK,EAAE,EAAtC;AAA0CC,EAAAA,QAAQ,EAAE,EAApD;AAAwDC,EAAAA,eAAe,EAAE;AAAzE,CAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAACkB,YAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgC,OAAO,GAAGvB,UAAU,EAA1B;AACA,QAAMwB,OAAO,GAAGvB,SAAS,EAAzB;AAEA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMoC,kBAAkB,GAAG,MAAKD,eAAe,CAAEE,gBAAD,IAAsB,CAACA,gBAAxB,CAA/C;;AACA,QAAMC,eAAe,GAAG,MAAKP,YAAY,CAAEQ,aAAD,IAAmB,CAACA,aAArB,CAAzC;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBb,IAAAA,OAAO,CAACT,YAAD,CAAP;AACAW,IAAAA,WAAW,CAAEY,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAN,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAJD;;AAOA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIhB,QAAJ,EAAc;AACZH,MAAAA,KAAK,CAACR,MAAN,CAAaS,IAAb,EAAmBM,OAAnB;AACD,KAFD,MAEO;AACLP,MAAAA,KAAK,CAACT,MAAN,CAAaU,IAAb,EAAmBM,OAAnB;AACAM,MAAAA,eAAe;AAEhB;AAEE,GAXL;;AAaI,QAAMO,aAAa,GAAG,MAAOC,GAAP,IAAe;AACnC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;AACJzB,IAAAA,KAAK,CAAC0B,YAAN,CAAmBJ,MAAnB,EAA2BE,KAA3B;;AACI,QAAI;AAGFjB,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAYA,QAAMG,WAAW,GAAG,MAAMF,OAAO,CAACC,GAAR,CAAY,kDAAZ,CAA1B;;AAMAD,EAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;;AAGA,QAAMgC,YAAY,GAAId,CAAD,IAAOhB,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,KAACiB,CAAC,CAACe,MAAF,CAASC,IAAV,GAAiBhB,CAAC,CAACe,MAAF,CAASE;AAArC,GAAD,CAAnC;;AAKF,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,UAAV;AAAsBC,MAAAA,SAAS,EAAC,OAAhC;AAAyCC,MAAAA,YAAY,EAAE;AAAvD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE9B,OAAO,CAAC+B,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE/B,OAAO,CAACgC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BrC,QAAQ,GAAG,SAAH,GAAe,SAAjD,CAJF,eAKA;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACP,IAAzB;AAA+B,IAAA,QAAQ,EAAEgB,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,iBACL,uDACD,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,EAAC,YAA9B;AAA2C,IAAA,YAAY,EAAE6B,YAAzD;AAAuE,IAAA,SAAS,MAAhF;AAAiF,IAAA,IAAI,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,eAEM,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAC,WAA7B;AAAyC,IAAA,YAAY,EAAEA,YAAvD;AAAqE,IAAA,IAAI,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CAFN,eAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,eAA1B;AAA0C,IAAA,YAAY,EAAEA,YAAxD;AAAsE,IAAA,IAAI,EAAC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,UAAb;AAAwB,IAAA,KAAK,EAAC,UAA9B;AAAyC,IAAA,YAAY,EAAEA,YAAvD;AAAqE,IAAA,IAAI,EAAEvB,YAAY,GAAG,MAAH,GAAY,UAAnG;AAA+G,IAAA,kBAAkB,EAAEE,kBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASMR,QAAQ,iBAAI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,UAAd;AAAyB,IAAA,KAAK,EAAC,iBAA/B;AAAiD,IAAA,YAAY,EAAE6B,YAA/D;AAA6E,IAAA,IAAI,EAAEvB,YAAY,GAAG,MAAH,GAAY,UAA3G;AAAuH,IAAA,kBAAkB,EAAEE,kBAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATlB,CADF,EAYGN,SAAS,gBACV,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAC,WAA1B;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAsD,IAAA,SAAS,EAAEG,OAAO,CAACiC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADU,gBAMV,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAoE,IAAA,SAAS,EAAEjC,OAAO,CAACiC,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,QAAQ,GAAG,SAAH,GAAe,SAD1B,CAlBF,eAwBA,oBAAC,WAAD;AACY,IAAA,QAAQ,EAAC,0EADrB;AAEY,IAAA,MAAM,EAAGuC,WAAD,iBACN,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAElC,OAAO,CAACmC,YAA3B;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAyD,MAAA,SAAS,MAAlE;AAAmE,MAAA,OAAO,EAAED,WAAW,CAACE,OAAxF;AAAiG,MAAA,QAAQ,EAAEF,WAAW,CAACG,QAAvH;AAAiI,MAAA,SAAS,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5I;AAAsJ,MAAA,OAAO,EAAC,WAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHd;AAOY,IAAA,SAAS,EAAEzB,aAPvB;AAQY,IAAA,SAAS,EAAEW,WARvB;AASY,IAAA,YAAY,EAAC,oBATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBA,eAmCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEhB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,QAAQ,GAAG,kCAAH,GAAwC,gCADpD,CADF,CADV,CAnCF,CALA,CADA,CADI,CADF;AA8DA,CAtHF;;AAwHC,MAAM2C,eAAe,GAAIC,KAAD,IAAU;AAEjC,SAAM;AACJC,IAAAA,IAAI,EAAED;AADF,GAAN;AAIA,CAND;;AAQA,MAAME,kBAAkB,GAAIC,QAAD,IAAa;AAEvC,SAAM;AACN3D,IAAAA,MAAM,EAAG,CAACU,IAAD,EAAOM,OAAP,KAAmB2C,QAAQ,CAAC3D,MAAM,CAACU,IAAD,EAAOM,OAAP,CAAP,CAD9B;AAENf,IAAAA,MAAM,EAAG,CAACS,IAAD,EAAOM,OAAP,KAAmB2C,QAAQ,CAAC1D,MAAM,CAACS,IAAD,EAAOM,OAAP,CAAP,CAF9B;AAGNmB,IAAAA,YAAY,EAAG,CAACJ,MAAD,EAASE,KAAT,KAAmB0B,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE9D,IAAR;AAAc+D,MAAAA,IAAI,EAAE;AAAE9B,QAAAA,MAAF;AAAUE,QAAAA;AAAV;AAApB,KAAD;AAHpC,GAAN;AAKA,CAPD;;AASD,eAAehD,OAAO,CAACsE,eAAD,EAAiBG,kBAAjB,CAAP,CAA4ClD,SAA5C,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport { Avatar, Button, Paper, Grid, Typography, Container, CircularProgress } from '@material-ui/core';\nimport {useHistory} from 'react-router-dom';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport { AUTH } from '../../constants/actionTypes'\n\nimport Icon from './icon'\nimport { signin, signup } from '../../actions/auth.js';\n\n/**\n* @author\n* @function LoginPage\n**/\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst LoginPage = (props) => {\nconst [form, setForm] = useState(initialState);\nconst [isSignup, setIsSignup] = useState(false);\nconst [isLoading, setIsLoading] = useState(false);\nconst history = useHistory();\nconst classes = useStyles();\n\nconst [showPassword, setShowPassword] = useState(false);\nconst handleShowPassword = () =>setShowPassword((prevShowPassword) => !prevShowPassword);\nconst handleIsLoading = () =>setIsLoading((prevIsLoading) => !prevIsLoading);\nconst switchMode = () => {\n  setForm(initialState);\n  setIsSignup((prevIsSignup) => !prevIsSignup);\n  setShowPassword(false);\n};\n\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  \n  if (isSignup) {\n    props.signup(form, history);\n  } else {\n    props.signin(form, history);\n    handleIsLoading();\n\n  }\n  \n    };\n\n    const googleSuccess = async (res) => {\n      const result = res?.profileObj;\n      const token = res?.tokenId;\n  props.googleSignIn(result, token);\n      try {\n        \n  \n        history.push('/');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n    \n\n\n\n\n    console.log(props);\n\n    \n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n\n\n\n  return(\n    <div style={{position:\"relative\", marginTop:\"100px\", marginBottom: \"50px\"}}>\n<Container component=\"main\" maxWidth=\"xs\">\n<Paper className={classes.paper} elevation={3}>\n  <Avatar className={classes.avatar}>\n    <LockOutlinedIcon/>\n    </Avatar>\n  <Typography variant=\"h6\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n<form className={classes.form} onSubmit={handleSubmit}>\n  <Grid container spacing={2}>\n    {isSignup && (\n        <>\n       <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n        </>\n      )}\n      <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\n      <Input name= \"password\" label=\"password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword}/>\n      { isSignup && <Input name = \"password\" label=\"Repeat Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />}\n  </Grid>\n  {isLoading ? \n  <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n    <CircularProgress color=\"inherit\"/>\n    </Button>: \n\n\n  <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n    {isSignup ? 'Sign up' : 'Sign in'}\n    \n  </Button>\n}\n\n<GoogleLogin\n            clientId=\"914101413857-9rvg8gs7e6j72qajgm05r5o1qljqqut7.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n  <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n</form>\n\n  \n</Paper>\n\n</Container>\n\n     </div>\n\n \n   )\n\n }\n\n const mapStateToProps = (state) =>{\n\n  return{\n    post: state\n    \n}\n }\n\n const mapStateToDispatch = (dispatch) =>{\n\n  return{\n  signin : (form, history) => dispatch(signin(form, history)),\n  signup : (form, history) => dispatch(signup(form, history)),\n  googleSignIn : (result, token) => dispatch({ type: AUTH, data: { result, token } })\n  }\n }\n\nexport default connect(mapStateToProps,mapStateToDispatch)(LoginPage);"]},"metadata":{},"sourceType":"module"}